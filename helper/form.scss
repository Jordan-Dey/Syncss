// ------------------------------------
//                 Form
// ------------------------------------

@use "../config/borders.scss";
@use "../config/colors.scss";
@use "../config/fonts.scss";
@use "../config/form.scss";
@use "../config/animation.scss";

@use "../helper/accessibility.scss";
@use "../helper/spaces.scss";
@use "../helper/text.scss";

// use "form" class
.form {

  // ------------------------------------
  // Label
  // ------------------------------------
  label {
    @extend .mb-2;

    display: block;
  }

  label,
  legend {
    @extend .text-regular;
    @extend .text-title;
  }

  fieldset {
    @extend .mb-4;
    @include borders.getStyles($size: form.$inputBorderSize, $style: form.$inputBorderStyle, $color:  form.$inputBorderColor, $radius: form.$inputBorderRadius);

    width: 100%;
    padding: form.$fieldsetPadding;
    background-color: form.$inputBackgroundColor;
  }

  // ------------------------------------
  // Text
  // ------------------------------------
  input[type="color"],
  input[type="date"],
  input[type="email"],
  input[type="file"],
  input[type="number"],
  input[type="password"],
  input[type="search"],
  input[type="tel"],
  input[type="text"],
  input[type="time"],
  textarea,
  select {
    @extend .mb-4;
    @extend .text-regular;
    @include borders.getStyles($size: form.$inputBorderSize, $style: form.$inputBorderStyle, $color:  form.$inputBorderColor, $radius: form.$inputBorderRadius);

    width: 100%;
    max-width: none;
    padding: form.$inputPadding;
    background-color: form.$inputBackgroundColor;
    color: form.$inputValueColor;
    font-family: fonts.$base;
    transition: animation.$duration-basic;

    &:focus,
    &:active {
      border-color: form.$inputFocusBorderColor;
    }

    &[disabled] {
      background-color: form.$inputDisabledColor;
    }
  }

  select {
    @extend .text-body;
  }

  textarea {
    min-height: form.$textareaHeight;
    vertical-align: middle;
  }

  // ------------------------------------
  // Checkbox / Radio
  // ------------------------------------
  input[type="checkbox"],
  input[type="radio"] {
    opacity: 0;
    position: fixed;
    left: -99px;

    &:focus-visible + label {
      @extend .accessibility-focusVisible;
    }

    & + label {
      @extend .mb-4;
      @extend .text-regular;
      @extend .text-body;

      position: relative;
      display: block;
      user-select: none;
      cursor: pointer;

      &::before {
        @include borders.getStyles($size: form.$inputBorderSize, $style: form.$inputBorderStyle, $color:  form.$inputBorderColor, $radius: form.$inputBorderRadius);

        content: "";
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        display: inline-block;
      }
    }

    &:checked + label::before {
      background-color: form.$inputAccentColor;
      text-align: center;
      line-height: 1;
    }
  }

  // Checkbox
  input[type="checkbox"] {
    & + label {
      padding-left: calc(form.$checkboxSize + form.$checkboxSpaceAfter);
      line-height: form.$checkboxSize;

      &::before {
        width: form.$checkboxSize;
        height: form.$checkboxSize;
      }
    }

    &:checked + label::before {
      content: "✓";
      font-size: calc(form.$checkboxSize - form.$inputBorderSize * 2);
      color: form.$checkboxMarkColor;
    }

    &[disabled] + label::before {
      background-color: form.$checkboxDisabledColor;
    }

    &[disabled]:checked + label::before {
      background-color: form.$checkboxActiveDisabledColor;
    }
  }

  // Radio
  input[type="radio"] {
    & + label {
      padding-left: calc(form.$radioSize + form.$radioSpaceAfter);
      line-height: form.$radioSize;

      &::before {
        width: form.$radioSize;
        height: form.$radioSize;
        border-radius: 50%;
      }
    }

    &:checked + label::before {
      content: "•";
      font-size: calc(form.$radioSize - form.$inputBorderSize * 2);
      color: form.$radioMarkColor;
    }

    &[disabled] + label::before {
      background: form.$radioDisabledColor;
    }

    &[disabled]:checked + label::before {
      background: form.$radioActiveDisabledColor;
    }
  }
}
