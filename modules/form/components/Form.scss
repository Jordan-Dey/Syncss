// ------------------------------------
//                 Form
// ------------------------------------

@use "../utilities/function.scss";

@use "../configs/colors.scss";
@use "../configs/fonts.scss";
@use "../configs/form.scss";
@use "../configs/animation.scss";
@use "../configs/borders.scss";

@use "../helpers/accessibility.scss";
@use "../helpers/spaces.scss";
@use "../helpers/text.scss";

// use "Form" class
.Form {
  // ------------------------------------
  // Label
  // ------------------------------------
  label {
    @extend .mb-2;

    display: block;
  }

  label,
  legend {
    @extend .text-regular;
    @extend .text-title;
  }

  fieldset {
    @extend .mb-4;
    @include borders.getStyles(
      $size: form.$input-border-size,
      $style: form.$input-border-style,
      $color: form.$input-border-color,
      $radius: form.$input-border-radius
    );

    width: 100%;
    padding: form.$fieldset-padding;
    background-color: form.$input-background-color;
  }

  // ------------------------------------
  // Text
  // ------------------------------------
  input[type="color"],
  input[type="date"],
  input[type="email"],
  input[type="file"],
  input[type="number"],
  input[type="password"],
  input[type="search"],
  input[type="tel"],
  input[type="text"],
  input[type="time"],
  textarea,
  select {
    @extend .mb-4;
    @extend .text-regular;
    @include borders.getStyles(
      $size: form.$input-border-size,
      $style: form.$input-border-style,
      $color: form.$input-border-color,
      $radius: form.$input-border-radius
    );

    width: 100%;
    max-width: none;
    padding: form.$input-padding;
    background-color: form.$input-background-color;
    color: form.$input-value-color;
    font-family: fonts.$base;
    transition: animation.$duration-basic;

    &:focus,
    &:active {
      border-color: form.$input-focus-border-color;
    }

    &[disabled] {
      background-color: form.$input-disabled-color;
    }
  }

  select {
    @extend .text-body;
  }

  textarea {
    min-height: form.$textarea-height;
    vertical-align: middle;
  }

  // ------------------------------------
  // Checkbox / Radio
  // ------------------------------------
  input[type="checkbox"],
  input[type="radio"] {
    position: absolute;
    width: 0;
    height: 0;
    opacity: 0;

    &:focus-visible + label {
      @extend .accessibility-focus-visible;
    }

    & + label {
      @extend .mb-4;
      @extend .text-regular;
      @extend .text-body;

      position: relative;
      display: block;
      user-select: none;
      cursor: pointer;

      &::before {
        @include borders.getStyles(
          $size: form.$input-border-size,
          $style: form.$input-border-style,
          $color: form.$input-border-color,
          $radius: form.$input-border-radius
        );

        content: "";
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        display: inline-block;
      }
    }

    &:checked + label::before {
      background-color: form.$input-accent-color;
      text-align: center;
      line-height: 1;
    }
  }

  // Checkbox
  input[type="checkbox"] {
    & + label {
      padding-left: calc(form.$checkbox-size + form.$checkbox-space-after);
      line-height: form.$checkbox-size;

      &::before {
        width: form.$checkbox-size;
        height: form.$checkbox-size;
      }
    }

    &:checked + label::before {
      content: "âœ“";
      font-size: calc(form.$checkbox-size - form.$input-border-size * 2);
      color: form.$checkbox-mark-color;
    }

    &[disabled] + label::before {
      background-color: form.$checkbox-disabled-color;
    }

    &[disabled]:checked + label::before {
      background-color: form.$checkbox-active-disabled-color;
    }
  }

  // Radio
  input[type="radio"] {
    & + label {
      padding-left: calc(form.$radio-size + form.$radio-space-after);
      line-height: form.$radio-size;

      &::before {
        width: form.$radio-size;
        height: form.$radio-size;
        border-radius: 50%;
      }
    }

    &:checked + label::before {
      $radio-mark-end-size: unquote((function.strip-unit(form.$radio-mark-size) + 1) + unit(form.$radio-mark-size));
      background: radial-gradient(form.$radio-mark-color form.$radio-mark-size, form.$input-accent-color $radio-mark-end-size);
    }

    &[disabled] + label::before {
      background: form.$radio-disabled-color;
    }

    &[disabled]:checked + label::before {
      background: form.$radio-active-disabled-color;
    }
  }
}
