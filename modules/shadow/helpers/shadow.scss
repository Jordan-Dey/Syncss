// ------------------------------------
//                Shadow
// ------------------------------------

@use "../configs/mq.scss";
@use "../configs/shadow.scss";

@mixin getShadowStyle($inset: shadow.$inset, $offset-x: shadow.$offset-x, $offset-y: shadow.$offset-y, $blur-radius: shadow.$blur-radius, $spread-radius: shadow.$spread-radius, $color: shadow.$color) {
  $insetProperty: if($inset == true,'inset','');
  box-shadow: unquote($insetProperty) $offset-x $offset-y $blur-radius $spread-radius $color;
}

@mixin getShadowStyles($key, $options: ()) {
  $config: shadow.getConfig($key);

  // load first level config or take default shadow configuration (Values of $options have priority)
  $inset: map-get($options, "inset") or shadow.$inset;
  $offset-x: map-get($options, "offset-x") or map-get($config, "offset-x") or shadow.$offset-x;
  $offset-y: map-get($options, "offset-y") or map-get($config, "offset-y") or shadow.$offset-y;
  $blur-radius: map-get($options, "blur-radius") or map-get($config, "blur-radius") or shadow.$blur-radius * $level;
  $spread-radius: map-get($options, "spread-radius") or map-get($config, "spread-radius") or shadow.$spread-radius * $level;
  $color: map-get($options, "color") or shadow.$color;

  // check if configuration contains media query
  @each $mq-name, $mq-query in mq.$name-map {
    @if map-get($config, $mq-name) {
      // If yes, load media query configuration
      $mq-values: map-get($config, $mq-name);
      $mq-offset-x:  map-get($mq-values, "offset-x") or $mq-offset-x;
      $mq-offset-y:  map-get($mq-values, "offset-y") or $mq-offset-y;
      $mq-blur-radius:  map-get($mq-values, "blur-radius") or $mq-blur-radius;
      $mq-spread-radius:  map-get($mq-values, "spread-radius") or $mq-spread-radius;
    
      // If media query is for mobile, load they config at first level
      @if ($mq-name == nth(mq.$name-available, 1)) {
        $offset-x:  $mq-offset-x;
        $offset-y:  $mq-offset-y;
        $blur-radius:  $mq-blur-radius;
        $spread-radius:  $mq-spread-radius;
      }  @else {
        // Create media querry with custom properties
        @include mq.media($mq-query) {
          @include getShadowStyle($inset: $inset, $offset-x: $mq-offset-x, $offset-y: $mq-offset-y, $blur-radius: $mq-blur-radius, $spread-radius: $mq-spread-radius, $color: $color);
        }
      }
    }
  }  

  @include getShadowStyle($inset, $offset-x, $offset-y, $blur-radius, $spread-radius, $color);
}

// Shadow level
@for $i from 1 through length(shadow.$config) {
  $key: nth(map-keys(shadow.$config), $i);

  .shadow-#{$key} {
    @include getShadowStyles($key);
  }

  .shadow-inset-#{$key} {
    @include getShadowStyles($key, $options: ("inset": true));
  }

  .shadow-current-color-#{$key} {
    @include getShadowStyles($key, $options: ("color": unquote("")));
  }

  .shadow-inset-current-color-#{$key} {
    @include getShadowStyles($key, $options: ("inset": true, "color": unquote("")));
  }
}